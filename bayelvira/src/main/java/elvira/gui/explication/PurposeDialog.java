package elvira.gui.explication;

import java.awt.*;
import java.util.ResourceBundle;
import elvira.Elvira;
import elvira.gui.EditorPanel;
import elvira.gui.InferencePanel;
import elvira.gui.NetworkFrame;

public class PurposeDialog extends javax.swing.JDialog{

	private InferencePanel infpanel;
	
	private ResourceBundle dialogBundle;
	
	public PurposeDialog(Frame parent){
		super(parent);

		switch (Elvira.getLanguaje()) {
		   case Elvira.AMERICAN: dialogBundle = ResourceBundle.getBundle ("elvira/localize/Dialogs");
		                         break;
		   case Elvira.SPANISH: dialogBundle = ResourceBundle.getBundle ("elvira/localize/Dialogs_sp");
		                        break;
		}
		
		infpanel=((NetworkFrame)Elvira.getElviraFrame().getCurrentNetworkFrame()).getInferencePanel();
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		getContentPane().setLayout(null);
		getContentPane().add(functionButton);
		functionButton.setText(Elvira.localize(dialogBundle,"Rol.Label"));
//		functionButton.setTooltip(Elvira.localize(dialogBundle,"Rol.tip"));
		functionButton.setBounds(150,20,100,30);
		functionButton.setSelected(infpanel.getPurposeMode());
		int nump=EditorPanel.functionsNode.length-2;
		setSize(440,(nump/2+2)*40+50);
		setVisible(false);
		int posy=40;
		int posx=10;
		String[] fValues=infpanel.getFunctionThreshold();
		for (int f=0; f<nump; f++){
			functionValues[f]=new javax.swing.JCheckBox();
			functionValues[f].setText(Elvira.localize(dialogBundle, EditorPanel.functionsNode[f]));
			getContentPane().add(functionValues[f]);
			if (f==nump/2){
				posx=220;
				posy=40;
			}
			functionValues[f].setBounds(posx,posy,200,40);
			if (fValues[f]!=null)
				functionValues[f].setSelected(true);
			else functionValues[f].setSelected(false);
			posy=posy+30;		
		}
		enableFunction(functionButton.isSelected());		
		okButton.setText(Elvira.localize(dialogBundle,"Ok.Label"));
//		okButton.setActionCommand("OK");
		getContentPane().add(okButton);
		okButton.setBounds(96,posy+40,100,30);
		cancelButton.setText(Elvira.localize(dialogBundle,"Cancel.Label"));
//		cancelButton.setActionCommand("Cancel");
		getContentPane().add(cancelButton);
		cancelButton.setBounds(228,posy+40,100,30);
		
		SymAction lSymAction = new SymAction();
		for (int f=0; f<nump; f++)
			functionValues[f].addActionListener(lSymAction);
	    functionButton.addActionListener(lSymAction);
		okButton.addActionListener(lSymAction);
		cancelButton.addActionListener(lSymAction);
		
		}
		//}}
	

	public PurposeDialog()
	{
		this((Frame)null);
	}

	public PurposeDialog(String sTitle)
	{
		this();
		setTitle(sTitle);
	}

	public void setVisible(boolean b)
	{
		if (b)
			setLocation(50, 50);
		super.setVisible(b);
	}

	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
		Dimension size = getSize();

		super.addNotify();

		if (frameSizeAdjusted)
			return;
		frameSizeAdjusted = true;

		// Adjust size of frame according to the insets
		Insets insets = getInsets();
		setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height);
	}

	// Used by addNotify
	boolean frameSizeAdjusted = false;

	//{{DECLARE_CONTROLS
	javax.swing.JCheckBox[] functionValues= new javax.swing.JCheckBox[EditorPanel.functionsNode.length-1];
	javax.swing.JButton okButton = new javax.swing.JButton();
	javax.swing.JButton cancelButton = new javax.swing.JButton();
	javax.swing.JRadioButton functionButton= new javax.swing.JRadioButton();
	//}}


    private void enableFunction(boolean b){
		for (int f=0; f<EditorPanel.functionsNode.length-2; f++){
			functionValues[f].setEnabled(b);
		}
    }

  /**
    * Class that handles the action events that occurs in the
    * PropagationDialog
    */

	class SymAction implements java.awt.event.ActionListener{
		
		public void actionPerformed(java.awt.event.ActionEvent event){
			Object object = event.getSource();
			if (object == functionButton)
				functionButton_actionPerformed(event);
		    else if (object == okButton)
				okButton_actionPerformed(event);
			else if (object == cancelButton)
			    cancelButton_actionPerformed(event);
		}
	
	}

	void functionButton_actionPerformed(java.awt.event.ActionEvent event){
		if (functionButton.isSelected()){
			infpanel.setPurposeMode(true);
			enableFunction(true);
		}
		else{ infpanel.setPurposeMode(false);
			  String[] fValues=new String[functionValues.length];
		 	  for (int f=0; f<functionValues.length-1; f++){
		 	  	if (functionValues[f].isSelected())
		 	  		functionValues[f].setSelected(false);
		 	  	fValues[f]=null;
		 	  }
		 	  infpanel.setFunctionThreshold(fValues);
		 	  infpanel.expandNodes();
		 	  enableFunction(false);
		 	  
		}
	}

	void okButton_actionPerformed(java.awt.event.ActionEvent event){
		Object object = event.getSource();
	    String[] fValues=new String[functionValues.length];
		for (int f=0; f<functionValues.length-1; f++)
			if (functionValues[f].isSelected())
				fValues[f]=EditorPanel.functionsNode[f];
			else fValues[f]=null;
		infpanel.setFunctionThreshold(fValues);
		infpanel.expandNodes();
		dispose();
	}

	void cancelButton_actionPerformed(java.awt.event.ActionEvent event){
		dispose();
	}

	
	
}