/* ProgressDialog.java */

package elvira.gui;

import java.awt.*;
import javax.swing.*;
import java.util.ResourceBundle;

import elvira.Elvira;

public class ProgressDialog extends javax.swing.JDialog
{
	public ProgressDialog(Frame parent)
	{
		super(parent);

		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setResizable(false);
		getContentPane().setLayout(null);
		setSize(397,265);
		setVisible(false);
		progressBar.setMaximum(15);
		getContentPane().add(progressBar);
		progressBar.setBounds(24,228,348,24);
		titleLabel.setText("Elvira");
		getContentPane().add(titleLabel);
		titleLabel.setFont(new Font("Dialog", Font.BOLD, 36));
		titleLabel.setBounds(192,48,180,40);
		versionLabel.setText("Version 0.163");
		getContentPane().add(versionLabel);
		versionLabel.setFont(new Font("Dialog", Font.BOLD, 16));
		versionLabel.setBounds(252,84,105,40);
		javaVersionLabel.setText(" Java Version: " + System.getProperty("java.version"));
		getContentPane().add(javaVersionLabel);
		javaVersionLabel.setFont(new Font("Dialog", Font.PLAIN, 12));
		javaVersionLabel.setBounds(190,115,205,40);
		javaVendorLabel.setText(" from "+System.getProperty("java.vendor"));
		getContentPane().add(javaVendorLabel);
		javaVendorLabel.setFont(new Font("Dialog", Font.PLAIN, 12));
		javaVendorLabel.setBounds(190,133,205,40);
		loadingLabel.setText("Cargando ...");
		getContentPane().add(loadingLabel);
		loadingLabel.setBounds(24,204,264,20);
		okButton.setText("OK");
		getContentPane().add(okButton);
		okButton.setBounds(252,168,96,28);
		okButton.setVisible(false);
		//}}

		setLocationRelativeTo(null);
		dialogBundle = Elvira.getDialogBundle();

      ImagePanel img = new ImagePanel ("elvira/gui/images/presentation.jpg");
		img.setLayout(new FlowLayout(FlowLayout.CENTER,5,5));
		getContentPane().add(img);
		img.setBounds(12,0,168,192);

		//{{REGISTER_LISTENERS
		SymAction lSymAction = new SymAction();
		okButton.addActionListener(lSymAction);
		//}}
	}

	public ProgressDialog()
	{
		this((Frame)null);
	}

	public ProgressDialog(String sTitle)
	{
		this();
		setTitle(sTitle);
	}

	public void setVisible(boolean b)
	{
		if (b)
			setLocation(50, 50);
		super.setVisible(b);
	}

	static public void main(String args[])
	{
		(new ProgressDialog()).setVisible(true);
	}

	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
		Dimension size = getSize();

		super.addNotify();

		if (frameSizeAdjusted)
			return;
		frameSizeAdjusted = true;

		// Adjust size of frame according to the insets
		Insets insets = getInsets();
		setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height);
	}

	// Used by addNotify
	boolean frameSizeAdjusted = false;

	//{{DECLARE_CONTROLS
	javax.swing.JProgressBar progressBar = new javax.swing.JProgressBar();
	javax.swing.JLabel titleLabel = new javax.swing.JLabel();
	javax.swing.JLabel versionLabel = new javax.swing.JLabel();
	javax.swing.JLabel javaVersionLabel = new javax.swing.JLabel();
	javax.swing.JLabel javaVendorLabel = new javax.swing.JLabel();
	
	javax.swing.JLabel loadingLabel = new javax.swing.JLabel();
	javax.swing.JButton okButton = new javax.swing.JButton();
	//}}
	ResourceBundle dialogBundle;
	boolean loadingMode;

	public static String localize (ResourceBundle bundle, String name) {
	   return Elvira.localize(bundle,name);
	}

	public void incrementProgressBar(String s) {
	   progressBar.setValue (progressBar.getValue()+1);
	   loadingLabel.setText (localize(dialogBundle,"ProgressDialog.Loading")
	                         +" "+s+"...");
	}

	public void setAboutMode () {
	   progressBar.setVisible(false);
	   loadingLabel.setVisible(false);
	   okButton.setVisible(true);
	}


	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == okButton)
				okButton_actionPerformed(event);
		}
	}

	void okButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		dispose();
	}

	class ImagePanel extends JPanel {
	   Image image;

	   public ImagePanel(String imageName) {
	      image = Toolkit.getDefaultToolkit().getImage(imageName);
	      MediaTracker mt = new MediaTracker(this);
         try {
            mt.addImage(image, 0);
            mt.waitForID(0);
         }
         catch ( Exception e ) {
            e.printStackTrace(); }
	   }

	   public void paint (Graphics g) {
	      g.drawImage(image, 0, 0, 168, 192, null);
	   }

	   public Dimension getPreferredSize() {
	      return new Dimension (image.getWidth(null),
	                            image.getHeight(null));
	   }
	}
}